syntax = "proto3";

option go_package = "./";

package gozab;

// the service follower provide to leader
service FollowerLeader {
    rpc Broadcast (Message) returns (Message) {}
    rpc Commit (Message) returns (Message) {}
    rpc HeartBeat (Message) returns (Message) {}
}

// the service leader provide to user
service LeaderUser {
    rpc Store (Message) returns (Message) {}
    rpc Retrieve (Message) returns (Message) {}
    rpc Identify (Message) returns (Message) {}
}

// the service during election
service VoterCandidate {
    rpc AskVote (Message) returns (Message) {}
    rpc NewEpoch (Message) returns (Message) {}
    rpc NewLeader (Message) returns (Message) {}
    rpc CommitNewLeader (Message) returns (Message) {}
}

message Message {

    int32 type = 1;

    int32 epoch = 2;
    repeated PropTxn hist = 3;
    int32 counter = 4;
    Txn transaction = 5;
    string content = 6;

    bool voted = 7;

    string key = 9;
    int32 value = 10;
}

message Vec {
    string key = 1;
    int32 value = 2;
}

message Zxid {
    int32 epoch = 1;
    int32 counter = 2;
}

message Txn {
    Vec v = 1;
    Zxid z = 2;
}

message PropTxn {
    int32 e = 1;
    Txn t = 2;
}